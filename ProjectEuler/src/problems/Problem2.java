package problems;

public class Problem2 {
	/* Problem Statement : 
	   Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

		By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	 */

	public static void main(String[] args) {
		long startTime = System.currentTimeMillis();
		System.out.println("Start Time : " + String.valueOf(startTime));
		
		int maxLimit = 4000000;
		int nextNumber ;
		int first = 2;
		int second = 8;
		int sum = first;
		
		
		while(second < maxLimit){
			sum = sum + second;
			nextNumber = (4*second) + first; 
			first = second;
			second = nextNumber;
		}
		
		System.out.println("Sum is : " + String.valueOf(sum));


		System.out.println("End Time : " + String.valueOf(System.currentTimeMillis()));
		System.out.println("Total Execution Time in millisecond :" + String.valueOf((System.currentTimeMillis() - startTime)));



	}

}
